pub let mut sub2val = 1;
sub2val = sub2val + 1;

pub class Hoge {
    pub let val:int;
    pub fn func(): int {
        return sub2val;
    }
}

global let sub2globalval = 1;
global fn sub2globalfun(): int {
   return sub2globalval;
}

pub enum enumTestSub {
   val1,
   val2,
   val3
}
pub let testEnum:enumTestSub! = nil;

pub module External require "test.external" {
   pub static let val:int;
   pub static fn func1( val:int );
   pub fn func2( val:int );
}

pub class Test {
   pub enum Hoge {
      val,
   }

   pub fn func() {
      let hoge = Test.Hoge.val;
      if hoge == .val {
         print( hoge );
      }
   }
}

fn main() {
   let test = new Test();
   test.func();

   let mut val = Test.Hoge.val;
   val = .val;
   print( val.$_txt );
}

pub class IF {
   pub let val:int;
}

pub form form1( val:int ): int;

pub fn testext(): int, real, str, Map<int,real>,List<int>, int!, real!, str!, Map<int,real>!,List<int>!
{
   return 1, 1.0, "", {}, [], nil, nil, nil, nil, nil;
}
