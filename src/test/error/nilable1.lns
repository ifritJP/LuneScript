{
    let val:int = nil;  // error
}
{
    let mut val:int = 0;
    val = nil;          // error
}
{
    let mut val:int! = 0;
    val = val + 1;      // error
}
{
    fn get(): int[] {
        return [1];
    }
    if! get()[1] {
        print( _exp );
    }
}
{
    fn get(): int![] {
        return [1];
    }
    let val:int = get()[1];  // error
}
{
    fn get(val:int) {
    }
    get( nil ); // error
}
{
    let mut val:int = 0;
    let val2:int! = nil;
    let val3:stem = nil;
    let val4:stem! = nil;
    val = val2@@int;
    val = val3@@int;
    val = val4@@int;
}
{
   let mut val = 0;
   let mut valnil:int! = 0;
   let map = {
      "hoge": {
         "foo": {
            "val1": 1,
            "val2": 2,
         }
      }
   };
   val = map$.hoge$.foo$.val1;  // error
   valnil = map$.hoge$.foo$.val1;
}

{
   class Test {
      pub fn func(): int {
         return 1;
      }
   }
   let test:Test! = new Test();
   let val:int = test$.func$(); // error
   let func:form! = fn (): int { return 0; };
   let val2:stem = func$(); // error
}

