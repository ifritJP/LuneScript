{
   let val = not 1; // error
}

fn func( val:int! ) {
}

{
   let val1 = 1;
   let val2:int! = nil;
   func( val1 or val2 );
   func( 1 and 2 ); // error
}

{
   let val:int! = 1;
   print( val and false or 1 );  // error
}

{
   let map:Map<int,int> = {};
   let size = #map; // error
}

print( 1 < 2 );
print( 1.0 < 2 );
print( 1 < 2.0 );
print( 1.0 < 2.0 );
print( "1" < 2.0 ); // error
print( 1 < "2.0" ); // error
print( "1" < "2.0" );

{
   let val1 = true;
   if val1 == true { // error
   }
   if val1 == false { // error
   }
   if val1 ~= false { // error
   }
   if val1 ~= true { // error
   }
   switch val1 {
      case true {
      }
   }
   let val2:bool! = true;
   if val2 == true {
   }
   if val2 == false {
   }
   if val2 ~= false {
   }
   if val2 ~= true {
   }
   let val3:stem = true;
   if val3 == true {
   }
   if val3 == false {
   }
   if val3 ~= false {
   }
   if val3 ~= true {
   }
}
