{
   let! val1, val2:int! = 1, nil {
      val2 = 2;
   }  
   then {
      print( val1, val2 );
   }; 

   let val1 = 1; // error
   let val2 = 1; // error

   if! let val1 = val2 {  // error
   }
}

{
   fn sub():int! {
      return 0;
   }  

   class Test {
      let val:int;
      
      pub fn func( val:int!, mut val2:int! ): int { // error
         let val3 = 1;
         when! val, val2 {
            val = 1; // error
            val2 = 2;
            return val + val2;
         }
         else {
            return val + 1;
         }
         when! self.val { // error
            return 1;
         }  
         when! sub() { // error
            return 2;
         }  
         when! 1 { // error
            return 3;
         }  
         when! val3 { // error
            return 4;
         }  
         return 0;
      }  
   }  
}


if! let val3 = val2 {
   print( val3 );
}
else {
   print( val3 );  // error
}
