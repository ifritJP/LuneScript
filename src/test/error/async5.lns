_lune_control default_async_all;

let globalVal1:List<int> = [];
let globalVal2:&List<int> = [];

fn foo1() __noasync {
   print( globalVal1[1] );
}
fn foo2() {
   print( globalVal1[1] ); // error
}

class Val {
   pub fn func1() __noasync mut {
   }
}

class Test {
   pri let allmut val:Val;
   pub fn func1() __noasync  {
      self.val.func1();
   }
   pub fn func2() {
      self.val.func1(); // error
   }

   pri let val2:allmut Val;
   pub fn sub1() __noasync {
      self.val2.func1();
   }
   pub fn sub2() {
      self.sub1(); // error
      self.val2.func1(); // error
      globalVal1.insert(1); // error
      print( globalVal2[1] );
   }
}

class Hoge extend (__Runner) {
   let test:Test;
   pub fn func() {
      let work = new Test( new Val() ); // error
      print( work );
      self.test.func1(); // error
      self.test.func2();
      foo1(); // error
      foo2();
   }
}
