{
   fn func1(): __ { // error
   }
}

{
   fn func(val:int):__ {  // error
      if val == 1 {  
         return;  // error
      }  
   }  
}

{
   fn func(val:int):__ {
      error( "" );
   }  
}

{
   fn func(val:int):__ { // error
      if val == 1 {
         error( "" );
      }
   }  
}

{
   fn func(val:int):__ {
      if val == 1 {
         error( "" );
      }
      else {
         error( "" );
      }
   }  
}

{
   fn func(val:int):__ {
      if val == 1 {
         error( "" );
      }
      error( "" );
   }  
}

{
   fn func(val:int):__ {
      if val == 1 {
         return;  // error
      }
      error( "" );
   }  
}

{
   fn func(val:int):__ {  // error
      switch val {
         case 1 {
            error( "" );
         }
      }
   }  
}

{
   fn func(val:int):__ {
      switch val {
         case 1 {
            error( "" );
         }
         default {
            error( "" );
         }
      }
   }  
}

{
   if 1 { // error
   }
   if 1.0 { // error
   }
   if "" { // error
   }
   if [] { // error
   }
   if {} { // error
   }
   if true {
   }
   let val:int! = 1;
   if val {
   }
}
{
   fn func( obj:int! ):int {
      while true {
         let! val = obj {
            break;
         }; 
         return 1;
      }  
      return 0;
   }  
   fn func2( obj:int! ):int {
      while true {
         let! val = obj {
            return 0;
         }
         then {
            break;
         };
         return 1; // error
      }
      return 0;
   }  
   fn func3( obj:int! ):int {
      while true {
         if obj {
            return 0;
         }
         return 1;
      }  
      return 0; // error
   }  
   fn func4( obj:int! ):int {
      while true {
         if obj {
            break;
         }  
         return 1;
      }  
      return 0;
   }  
   fn func5( obj:int! ):int {
      while true {
         if obj {
            break;
         }
         else {
            return 0;
         }
         return 1; // error
      }  
      return 0;
   }  
   fn func6( obj:int! ):int {
      while true {
         if obj {
            return 0;
         }
         else {
            return 0;
         }
         return 1; // error
      }  
      return 0; // error
   }  
}
