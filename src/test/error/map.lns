{
    foreach val, key in { "A": 1, "B": 2 } {
        let val2:int = val;
        let key2:str = key;
    }
}
{
    foreach val, key in { "A": 1, "B": 2.0 } {
        let val2:int = val; // error
        let key2:str = key;
    }
}
{
    foreach val, key in { "A": 1, "B": 2.0 } {
        let val2:stem = val;
        let key2:str = key;
    }
}
{
    foreach val, key in { "A": nil, "B": 2 } {
        let val2:int = val;
        let key2:str = key;
    }
}
{
    let val3:int! = nil;
    foreach val, key in { "A": val3, "B": 2 } {
        let val2:int = val;
        let key2:str = key;
    }
}
{
    let val3:real! = nil;
    foreach val, key in { "A": val3, "B": 2 } {
        let val2:int = val; // error
        let key2:str = key;
    }
}
{
    let val3:real! = nil;
    foreach val, key in { "A": val3, "B": 2 } {
        let val2:stem = val;
        let key2:str = key;
    }
}
{
    foreach val, key in { nil: 1, "B": 2 } { // error
        let val2:int = val;
        let key2:str = key;
    }
}
{
    let val3:str! = nil;
    foreach val, key in { val3: 1, "B": 2 } { // error
        let val2:int = val;
        let key2:str = key;
    }
}

{
   let mut val2:Map<int,int> = {};
   val2[ 1.0 ] = 1; // error
   val2[ "1.0" ] = 1; // error
   val2[ 1 ] = 1.0; // error
   val2[ 1 ] = "str"; // error
}

{
   enum Val {
      Val1,
      Val2,
   }
   enum Hoge {
      Val1,
      Val2,
   }

   // map コンストラクタで、key, あるいは val に、異なる種類の enum を指定すると、
   // 解析が無限ループした不具合があったので、その再発防止
   let map = { Val.Val1: Val.Val2,   
               Hoge.Val1: Hoge.Val2 };
}


{
   let mut val:Map<str,int> = {};
   val[ str ] = 1;  // error
}

{
   let mut val2:Map<str,stem> = {};
   (unwrap val2.abc).zz = 1; // error
   val2.abc.zz = 1; // error
}
