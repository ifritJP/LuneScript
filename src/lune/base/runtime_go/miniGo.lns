// {
//    class Test extend (Mapping) {
//       let val:List<Set<str>> {pub};
//    }

//    let test = new Test( [(@"abc")] );
//    let map = test._toMap();
//    let test2 = Test._fromMap( map );
//    print( test2 );
// }
{
   class Sub<X:(Mapping)> extend (Mapping) {
      let val:X {pub};
   }
   class Test<T:(Mapping)> extend (Mapping) {
      let val:Sub<T> {pub};
   }

   let test = new Test( new Sub( "abc" ) );
   print( test.$val.$val );
   let map = test._toMap();
   let test2 = unwrap Test<Sub<str>>._fromMap( map );
   print( test2.$val.$val );
}

// class Test<T:(Mapping)> extend (Mapping) {
//    let val:T {pub};
// }

// let test = new Test( "abc" );
// let map = test._toMap();
// if! let test2 = Test<str>._fromMap( map ) {
//    print( test2.$val .. "xyz" );
// }
