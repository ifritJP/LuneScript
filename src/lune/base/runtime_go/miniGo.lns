interface Test {
   pub fn func() : int;
}
class Sub extend (Test) {
   pub fn func() : int {
      return 10;
   }
}
fn func1( sub:&Test ) : int {
   return sub.func();
}
fn func2( test:&stem ) : int {
   if! let sub = test@@@Sub {
      return sub.func();
   }
   else {
      return 0;
   }
}

let test:Test = new Sub();

let mut total = 0;
for index = 1, 10 {
   if (index % 2) == 0 {
      total = total + func1( test );
   }
}
print( total );
