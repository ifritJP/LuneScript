class Test {
   pub fn func() : int {
      return 1;
   }
}
class Sub extend Test {
   pub override fn func() : int {
      return 10;
   }
}
fn func1( sub:&Sub ) : int {
   return sub.func();
}
fn func2( test:&stem ) : int {
   if! let sub = test@@@Sub {
      return sub.func();
   }
   else {
      return 0;
   }
}

let test = new Sub();

let mut total = 0;
for index = 1, 50000000 {
   total = total + func1( test );
}
print( total );
