# -*- coding:utf-8 -*-
#+AUTHOR: ifritJP
#+STARTUP: nofold
#+OPTIONS: ^:{}
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-mode-document.css" />

#+TITLE: TODO

* 機能

- [ ] prototype 宣言しかしていないメソッドを持つクラスのエラー出力対応。

- [ ] import のフォーマットバージョンチェック
- [ ] import 時の typeId のリセット
- [ ] form の型宣言
- [ ] デフォルトコンストラクタを持つクラスを継承したときに、
      コンストラクタを宣言せずにクラスを作成可能にする
- [ ] 関数呼び出しの シンタックスシュガー対応
- [ ] 関数呼び出しの引数名指定
- [ ] マクロ内での import。
- [ ] マクロを別 TransUnit で処理。
- [ ] トランスコード時、関数の型(引数、戻り値)をコメントで出力する
- [ ] enum への変換 _from() で、アンマッチ時のデフォルト値を持つ関数を追加。
- [ ] class 内 class, enum サポート。
- [ ] class の trust サポート
- [ ] コメントを Lua コードに出力
- [ ] テストコードのサポート。テストコードでは pri のデータにもアクセス可能とする。
- [ ] 行末が文字列、コメントだと、emacs のインデント調整がおかしい
- [ ] emacs のインデントで行末に無駄なスペースが入る
- [ ] front.lns の lua, save, glue 毎の関数化
- [ ] emacs のカーソル位置にあるシンボルの型確認
- [ ] 戻り値を持つ関数の、return 有無を確認するフロー解析
- [ ] let で初期値を入れずに済むフロー解析
- [ ] "%s" (val) の %s と val の対応チェック
- [ ] import as 対応
- [ ] import のモジュールがない時に TransUnit を続けられるようにする。
- [ ] 'pro' のメソッドが外部モジュールで override できない。
- [ ] 独自クラスの generics 対応
- [ ] C へのトランスコード

* テストコード

- [ ] super の引数チェック
- [X] 外部のモジュールで宣言された、コンストラクタを持つ class を extend 
- [X] 間接 import したモジュール内の enum の omit アクセス
- [X] 引数が enum の nilable だった場合、補完が効かない。
- [X] enum 値のシンボル名が文字列等のシンボル以外でも定義できてしまう。
- [X] pub 宣言している変数の型の Map のキーが、 pub 宣言していないとエラー検知しない。
- [X] meta 情報の削減
- [X] メソッドの prototype 宣言と、実際の定義が違う時に、型チェックしていない。
- [X] interface を implement しているときに、 関数の引数チェックしていない。
  


* ドキュメント

- [ ] __func__, __line__, __mod__ のサポート
- [X] map 型からの Class 生成(fromMap)、 Class からの map 生成 (toMap)
- [X] Lua 5.2 で bit 演算子を利用した場合、 bit モジュールを利用するように変換する
- [X] module 宣言したモジュールの glue コード自動生成
